googleplaystore <- read.csv("E:/Courses/ITMD527/Project/DataSets/google-play-store-apps/googleplaystore.csv")
View(googleplaystore)
data <- googleplaystore
class(data$Category)
class(data$Rating)
class(data$Installs)
class(data$Price)
class(data$Reviews)
m1 <- lm(Rating~data$Category+data$Reviews+data$Size+data$Installs+data$Type+data$Price+data$Content.Rating+data$Genres+data$Last.Updated+data$Current.Ver+data$Android.Ver)
Category
data
Category
load("E:\\Courses\\ITMD527\\Coding_Practice\\Final.RData")
AutoMPGData[1,]
plot(mpg,weight)
plot(mpg,1/weight)
plot(mpg,AutoMPGData$weight)
vif(model_using_p_value)
cooks.distance(model_using_p_value)
inf<-cooks.distance(model_using_p_value)
summary(inf)
inf
q()
model_using_p_value
summary(model_using_p_value)
q()
mydata
load("E:\\Courses\\ITMD527\\Coding_Practice\\CP2\\cp2.RData")
mydata
head(adult_data)
basicStats(adult_data$age)
head(adult_data)
library(caret)
adult_data[,1]<-factor(adult_data[,1]
)
class(adult_data$age)
class(adult_data$education.num)
adult_data$education.num <- factor(adult_data$education.num)
class(adult_data$education.num)
class(adult_data$fnlwgt)
adult_data$fnlwgt <- factor(adult_data$fnlwgt)
class(adult_data$fnlwgt)
adult_data$capital.gain <- factor(adult_data$capital.gain)
adult_data$capital.loss <- factor(adult_data$capital.loss)
adult_data$hours.per.week <- factor(adult_data$hours.per.week)
summary(adut_data$age)
summary(adult_data$age)
mydata$age
summary(mydata$age)
summary(adult_data$age)
adult_data$age
class(mydata$age)
data_nb <- adult_data
data_nb[1,]
data_nb <- cut(data_nb$age,4)
library(dummies)
data_nb <- mydata
data_nb <- cut(data_nb$age,4)
data_nb[1,]
mydata[1,]
data_nb <- mydata
data_nb$age <- cut(data_nb$age,4)
data_nb$fnlwgt <- cut(data_nb$fnlwgt,3)
data_nb$education.num <- cut(data_nb$education.num,3)
data_nb$capital.gain <- cut(data_nb$capital.gain,2)
data_nb$capital.loss <- cut(data_nb$capital.loss,2)
data_nb$hours.per.week <- cut(data_nb$hours.per.week,4)
head(data_nb)
data_knn=dummy.data.frame(mydata,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
gc()
data_knn=dummy.data.frame(mydata,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
adult_data <-
;
adult_data <- 0
adult_data
data_knn=dummy.data.frame(mydata,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
q()
adult.data <- read.csv("E:/Courses/ITMD527/Coding_Practice/CP2/adult.data.txt")
View(adult.data)
data <- adult.data
data <- subset(data, select = -native.country)
data$workclass <- gsub("?",NA,data$workclass, fixed = TRUE)
data$workclass[is.na(data$workclass)] <- "Private"
data$workclass <- as.factor(data$workclass)
data$occupation <- gsub("?",NA,data$occupation, fixed = TRUE)
data$occupation[is.na(data$occupation)] <- "Prof-specialty"
data$occupation <- as.factor(data$occupation)
library(dummies)
install.packages('dummies', dependencies = TRUE)
library(dummies)
data_knn=dummy.data.frame(data,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
data$workclass
data_knn=dummy.data.frame(data,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
data_knn
data
data <- adult.data
adult.data <- read.csv("E:/Courses/ITMD527/Coding_Practice/CP2/adult.data.txt")
View(adult.data)
data <- adult.data
data$workclass <- gsub("?",NA,data$workclass, fixed = TRUE)
class(data$workclass)
data$workclass[is.na(data$workclass)] <- "Private"
data$workclass <- as.factor(data$workclass)
data$occupation <- gsub("?",NA,data$occupation, fixed = TRUE)
data$occupation[is.na(data$occupation)] <- "Prof-specialty"
data$occupation <- as.factor(data$occupation)
summary(data$workclass)
summary(data$occupation)
library(dummies)
data_knn=dummy.data.frame(data,names=c("age","fnlwgt","education.num","capital.gain","capital.loss","hours.per.week"))
load("E:\\Courses\\ITMD527\\WK11\\HW8\\HW8.RData")
ar1
ar2
ma1
arima21
arma21
arma12
q()
load("D:\\Courses\\ITMD527\\WK11\\HW8\\.RData")
library(tseries)
library(fBasics)
library(zoo)
library(forecast)
sarima12 <- arima(coredata(rateTS),order=c(0,1,2),seasonal=list(order=c(0,1,2),period=12))
sarima12
sarima21 <- arima(coredata(rateTS),order=c(0,1,1),seasonal=list(order=c(0,1,1),period=12))
sarima21
ar2 <- arima(coredata(rateTS),order=c(2,1,0),method='ML')
ma1 <- arima(coredata(rateTS),order=c(0,1,1),method='ML')
arima12<-arima(coredata(rateTS),order=c(1,1,2),method='ML')
arima21<-arima(coredata(rateTS),order=c(2,1,1),method='ML')
arma12<-arima(coredata(diff_train),order=c(1,0,2),method='ML')
arma21<-arima(coredata(diff_train),order=c(2,0,1),method='ML')
sarima12 <- arima(coredata(rateTS),order=c(0,1,2),seasonal=list(order=c(0,1,2),period=12))
sarima21 <- arima(coredata(rateTS),order=c(0,1,1),seasonal=list(order=c(0,1,1),period=12))
pred_ar2 <- predict(ar2, n.ahead=10)
pred_ma1 <- predict(ma1, n.ahead=10)
pred_arima12 <- predict(arima12, n.ahead=10)
pred_arima21 <- predict(arima21, n.ahead=10)
pred_arma12 <- predict(arma12, n.ahead=10)
pred_arma21 <- predict(arma21, n.ahead=10)
pred_sarima12 <- predict(sarima12, n.ahead=10)
pred_sarima21 <- predict(sarima21, n.ahead=10)
library(DMwR)
err_ar2<-regr.eval(coredata(rateTestTS),pred_ar2$pred)
err_ma1<-regr.eval(coredata(rateTestTS),pred_ma1$pred)
err_arima12<-regr.eval(coredata(rateTestTS),pred_arima12$pred)
err_arima21<-regr.eval(coredata(rateTestTS),pred_arima21$pred)
err_arma12<-regr.eval(coredata(rateTestTS),pred_arma12$pred)
err_arma21<-regr.eval(coredata(rateTestTS),pred_arma21$pred)
err_sarima12<-regr.eval(coredata(rateTestTS),pred_sarima12$pred)
err_sarima21<-regr.eval(coredata(rateTestTS),pred_sarima21$pred)
errors<-rbind(err_ar2,err_ma1,err_arima12,err_arima21,err_arma12,err_arma21,err_sarima12,err_sarima21)
errors
q()
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
data <- read.csv("BlackFriday.csv", sep=",", header=T)
data$Product_Category_2[is.na(data$Product_Category_2)] <- 9.84 
data$Product_Category_3[is.na(data$Product_Category_3)] <- 12.7 
data$Product_Category_1 <- as.numeric(data$Product_Category_1)
data_knn<-subset(data,select = -User_ID)
data_knn<-subset(data_knn,select = -Product_ID)
data_knn$Purchase<-ifelse(data_knn$Purchase>9334,1,0)
data_knn$Purchase<-factor(data_knn$Purchase)
library(dummies)
data_knn<-dummy.data.frame(data_knn,names=c("Gender","Age","Occupation","City_Category","Stay_In_Current_City_Years","Marital_Status"))
numeric.vars.knn = sapply(data_knn,is.numeric)
data_knn[numeric.vars.knn] <- lapply(data_knn[numeric.vars.knn],scale)
set.seed(123)
test<-1:107515
train.data_knn<-data_knn[-test,]
test.data_knn<-data_knn[test,]
train.Purchase<-data_knn$Purchase[-test]
test.Purchase<-data_knn$Purchase[test]
library(class)
knn.1<-knn(train.data_knn,test.data_knn,train.Purchase,k=1)
accuracy(test.Purchase,knn.1)
library(Metrics)
accuracy(test.Purchase,knn.1)
knn.5<-knn(train.data_knn,test.data_knn,train.Purchase,k=5)
accuracy(test.Purchase,knn.5)
knn.15<-knn(train.data_knn,test.data_knn,train.Purchase,k=15)
accuracy(test.Purchase,knn.15)
data_nb<-data
data_nb<-subset(data,select = -User_ID)
data_nb<-subset(data_nb,select = -Product_ID)
data_nb$Purchase<-ifelse(data_nb$Purchase>9334,1,0)
data_nb$Purchase<-factor(data_nb$Purchase)
head(data_nb)
class(data_nb$Occupation)
class(data_nb$Marital_Status)
class(data_nb$City_Category)
class(data_nb$Stay_In_Current_City_Years)
data_nb$Occupation<-factor(data$Occupation)
data_nb$Marital_Status<-factor(data_nb$Marital_Status)
summary(data_nb$Product_Category_1)
data_nb$Product_Category_1<-cut(data_nb$Product_Category_1,3)
data_nb$Product_Category_2<-cut(data_nb$Product_Category_2,4)
data_nb$Product_Category_3<-cut(data_nb$Product_Category_3,4)
head(data_nb)
library(naivebayes)
data(data_nb)
names(data_nb)
index.data_nb<-sample(1:row(data_nb),size=round(0.8*nrow(data_nb)))
index.data_nb<-sample(1:nrow(data_nb),size=round(0.8*nrow(data_nb)))
train.data_nb<-data_nb[index.data_nb,]
test.data_nb<-data_nb[-index.data_nb,]
model_nb<-naive_bayes(Purchase~.,train.data_nb)
pred<-predict(model_nb,test.data_nb)
head(predict(model_nb,test.data_nb,type="prob"))
library(Metrics)
accuracy(test.data_nb$Purchase,pred)
data_lg<-data_knn
knn.1<-model_knn_1
model_knn_1<-knn.1
model_knn_5<-knn.5
model_knn_15<-knn.15
model_lg_full<-glm(Purchase~.,data=data_lg,family=binomial())
summary(model_lg_full)
model_lg_base<-glm(Purchase~Gender,data=data_lg,family=binomial())
head(data_lg)
model_lg_base<-glm(Purchase~Product_Category_1,data=data_lg,family=binomial())
summary(model_lg_base)
model_lg_fwd<-step(model_lg_base,scope=list(upper=model_lg_full,lower=~1),direction="forward",trace=T)
model_lg_bwd<-step(model_lg_full,direction="backward",trace=T)
summary(model_lg)
summary(model_lg_full)
summary(model_lg_base)
summary(model_lg_fwd)
summary(model_lg_bwd)
index.data_lg<-sample(1:nrow(data_lg),size=round(0.8*nrow(data_lg)))
train.data_lg<-data_lg[index.data_lg,]
test.data_lg<-data_lg[-index.data_lg,]
model_lg_full<-glm(Purchase~.,data=train.data_lg,family=binomial())
summary(model_lg_full)
model_lg_base<-glm(Purchase~Product_Category_1,data=train.data_lg,family=binomial())
summary(model_lg_base)
model_lg_fwd<-step(model_lg_base,scope=list(upper=model_lg_full,lower=~1),direction="forward",trace=T)
summary(model_lg_fwd)
summary(model_lg_full)
summary(model_lg_base)
model_lg_bwd<-step(model_lg_full,direction="backward",trace=T)
predfull<-predict(model_lg_full,test.data_lg)
head(predict(model_lg_full,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predfull)
predbase<-predict(model_lg_base,test.data_lg)
head(predict(model_lg_base,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predbase)
predfwd<-predict(model_lg_fwd,test.data_lg)
head(predict(model_lg_fwd,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predfwd)
predbwd<-predict(model_lg_bwd,test.data_lg)
head(predict(model_lg_bwd,test.data_lg,type="prob"))
library(Metrics)
predfull<-predict(model_lg_full,test.data_lg)
head(predict(model_lg_full,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predfull)
predbase<-predict(model_lg_base,test.data_lg)
head(predict(model_lg_base,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predbase)
predfwd<-predict(model_lg_fwd,test.data_lg)
head(predict(model_lg_fwd,test.data_lg,type="prob"))
accuracy(test.data_lg$Purchase,predfwd)
predbwd<-predict(model_lg_bwd,test.data_lg)
head(predict(model_lg_bwd,test.data_lg,type="prob"))
library(boot)
mse_model_lg_full<-cv.glm(test.data_lg,model_lg_full)$delta
